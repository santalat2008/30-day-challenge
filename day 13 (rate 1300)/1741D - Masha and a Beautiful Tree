def solve():
    import sys
    input = sys.stdin.read
    data = input().split()
    t = int(data[0])
    idx = 1
    out = []
    
    sys.setrecursionlimit(10**7)
    
    def dfs(a):
        if len(a) == 1:
            return 0, min(a), max(a)
        mid = len(a) // 2
        l = a[:mid]
        r = a[mid:]
        cl, lmin, lmax = dfs(l)
        cr, rmin, rmax = dfs(r)
        if cl == -1 or cr == -1:
            return -1, 0, 0
        if lmax < rmin:
            return cl + cr, lmin, rmax
        elif rmax < lmin:
            return cl + cr + 1, rmin, lmax
        else:
            return -1, 0, 0
    
    for _ in range(t):
        m = int(data[idx]); idx += 1
        p = list(map(int, data[idx:idx+m])); idx += m
        res, _, _ = dfs(p)
        out.append(str(res))
    
    print("\n".join(out))

if __name__ == "__main__":
    solve()
