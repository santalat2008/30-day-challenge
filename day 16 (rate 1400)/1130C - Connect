from collections import deque
n=int(input())
r1,c1=map(int,input().split())
r2,c2=map(int,input().split())
g=[input().strip() for _ in range(n)]
r1-=1;c1-=1;r2-=1;c2-=1
def bfs(sr,sc):
    vis=[[0]*n for _ in range(n)]
    q=deque()
    q.append((sr,sc))
    vis[sr][sc]=1
    comp=[]
    while q:
        x,y=q.popleft()
        comp.append((x,y))
        for dx,dy in ((1,0),(-1,0),(0,1),(0,-1)):
            nx,ny=x+dx,y+dy
            if 0<=nx<n and 0<=ny<n and not vis[nx][ny] and g[nx][ny]=='0':
                vis[nx][ny]=1
                q.append((nx,ny))
    return comp
comp1=bfs(r1,c1)
vis1=[[0]*n for _ in range(n)]
for x,y in comp1: vis1[x][y]=1
if vis1[r2][c2]:
    print(0)
else:
    comp2=bfs(r2,c2)
    ans=float('inf')
    for x1,y1 in comp1:
        for x2,y2 in comp2:
            d=(x1-x2)**2+(y1-y2)**2
            if d<ans: ans=d
    print(ans)
